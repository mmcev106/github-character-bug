=pod

=for comment
DO NOT EDIT. This Pod was generated by Swim v0.1.48.
See http://github.com/ingydotnet/swim-pm#readme

=encoding utf8

=over

=item * Branching with subrepos JustWorks™.

=item * Different branches can have different subrepos in different states, etc.

=item * Moving/renaming/deleting a subrepo subdir JustWorks™.

=item * You can C<init> an existing subdirectory into a subrepo.

=item * Your git history is kept squeaky clean.

=item * Upstream history (clone/pull) is condensed into a single commit.

=item * Pulls can use a C<merge>, C<rebase> or C<force> strategies.

=item * You can see the subrepo history with C<< git log subrepo/<subdir>/fetch >>.

=item * Commits pushed back upstream are B<not> condensed (by default).

=item * Trivial to try any subrepo operations and then reset back.

=item * No configuration required.

=item * Does not introduce history that messes up other git commands.

=item * Fixes known rebase failures with C<git-subtree>.

=back

=head1 Upgrading

If you used the C<.rc> or C<PATH> method of installation, just run this to
upgrade C<git-subrepo>:

    git subrepo upgrade

Or (same thing):

    cd /path/to/git-subrepo
    git pull

If you used C<make install> method, then run this again (after C<git pull>):

    make install        # Possibly with 'sudo'

=head1 Command Completion

The C<git subrepo> command supports C<< <TAB> >>-based command completion. If
you don't use the C<.rc> script (see Installation, above), you'll need to
enable this manually to use it.

=head2 In Bash

If your Bash setup does not already provide command completion for Git, you'll
need to enable that first:

    source <Git completion script>

On your system, the Git completion script might be found at any of the
following locations (or somewhere else that we don't know about):

=over

=item * C</etc/bash_completion.d/git>

=item * C</usr/share/bash-completion/git>

=item * C</usr/share/bash-completion/completions/git>

=item * C</opt/local/share/bash-completion/completions/git>

=item * C</usr/local/etc/bash_completion.d/git>

=item * C<~/.homebrew/etc/bash_completion.d/git>

=back

In case you can't find any of these, this repository contains a copy of the
Git completion script:

    source /path/to/git-subrepo/share/git-completion.bash

Once Git completion is enabled (whether you needed to do that manually or
not), you can turn on C<git-subrepo> completion with a command like this:

    source /path/to/git-subrepo/share/completion.bash

=head2 In zsh

In the Z shell (zsh), you can manually enable C<git-subrepo> completion by
adding the following line to your C<~/.zshrc>, B<before> the C<compinit>
function is called:

    fpath=('/path/to/git-subrepo/share/zsh-completion' $fpath)

=head1 Status

The git-subrepo command has been in use for well over a year and seems to get
the job done. Development is still ongoing but mostly just for fixing bugs.

Trying subrepo out is simple and painless (this is not C<git submodule>).
Nothing is permanent (if you do not push to shared remotes). ie You can always
play around and reset back to the beginning without pain.

This command has a test suite (run C<make test>), but surely has many bugs. If
you have expertise with Git and subcommands, please review the code, and file
issues on anything that seems wrong.

If you want to chat about the C<git-subrepo> command, join C<#gitcommands> on
C<irc.freenode.net>.

=head1 Notes

=over

=item * Works on POSIX systems: Linux, BSD, OSX, etc.

=item * Works on various Windows environments. See "Windows" section above.

=item * The C<git-subrepo> repo itself has 2 subrepos under the C<ext/> subdirectory.

=item * Written in (very modern) Bash, with full test suite. Take a look.

=item * A C<.gitrepo> file never is in the top level dir (next to a C<.git/> dir).

=back

=head1 Authors

=over

=item * Ingy döt Net <ingy@ingy.net>

=item * Magnus Carlsson <grimmymail@gmail.com>

=item * Austin Morgan <admorgan@morgancomputers.net>

=back

=head1 License and Copyright

The MIT License (MIT)

Copyright (c) 2013-2020 Ingy döt Net

=cut